# % 格式化占位符

# 整数占位符：%d
# 如果给%d 传入一个浮点数，那它会自动将它转换成整数
print("%d" % 3.99)  # 输出3
# 浮点数占位符:%f
print("%f" % 3.14)  # 3.140000
# 指定精度的浮点数占位符：%.f
print("%.2f" % 3.1415926)  # 3.14
# 字符串占位符：%s
# %s 是胜任最广泛的占位符，它可以对应任何类型的变量
print("%s" % 100)  # 输出100
print("%s" % 3.14)  # 输出3.14
print("%s" % "python")  # 输出python
# 输出百分号%：%%
report = "%d年%s公司营收增长了%.2f%%;" % (2021, "腾讯", 20.28)
print(report)  # 2021年腾讯公司营收增长了20.28%；

# format函数
# format函数可以像%那样来格式化多个参数
# {0}表示第一个参数，{1}{2}表示第二、第三个参数。如果有参数在字符串出现多次，可以不用重复的传入。

'{0}的GDP为{1:,}...虽然它的GDP只有{1:,}美元，但它的人均GDP高达18万美元'.format("摩纳哥", 7100000000)

# 字符串索引和切片
# 索引--字符串的索引，正向数从0开始，逆向数从-1开始；
"CHINA"[1]  # 第2个字符"H"
"CHINA"[-1]  # 最后一个字符"A"
"CHINA"[-2]  # 倒数第二个字符"N"
# 切片
"CHINA"[0:6]  # CHINA
"CHINA"[0:]  # CHINA
# 前面的0也可以不写，冒号左边为空表示从第一个字符开始截取。
"CHINA"[:]  # CHINA
"CHINA"[:3]  # 从0到第3个: CHI
"CHINA"[2:]  # 从第3个到末尾: INA
# 每隔两个字符截取一个
"CHINA"[::2]  # CIA
# 第二个冒号表示截取步长，这里的2表示每两个字符取一个，如果不传，默认就是每一个都取。步长也
# 可以为负数，如果传递了一个负数，则表示是从右往左进行截取;
# 从右往左每隔两个两个字符截取一个
"CHINA"[::-2]  # AIC
# 倒序输出一个字符串，可以这样写:
"CHINA"[::-1]  # ANIHC

# 字符串函数
# strip函数的作用就是去除字符串首尾的所有空白字符。不会去除掉字符串之间的空白字符
"a b c".strip()
# lstrip 和 rstrip 函数，分别去除字符串左边和右边的空白字符
" abc".lstrip()
"abc ".rstrip()

# 将所有字符变成大写
"china".upper()  # CHINA
# 将字符串的首字母变成大写
"china".capitalize()  # China
# 将所有字符变成小写
"CHINA".lower()  # china
# 将每个单词的首字母变成大写
"i have a dream".title()  # I Have A Dream


